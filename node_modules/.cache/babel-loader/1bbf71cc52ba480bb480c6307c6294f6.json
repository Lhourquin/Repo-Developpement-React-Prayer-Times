{"ast":null,"code":"var _jsxFileName = \"/home/niko/Lab/React/waqt-al-falaah/src/components/CountDown.js\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CountDown extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fajr: moment([7, 0], \"HH:mm\")\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"ok\", console.log(this.state.fajr)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this);\n  }\n  /* let eventTime= 1366549200; // Timestamp - Sun, 21 Apr 2013 13:00:00 GMT\n  let currentTime = 1366547400; // Timestamp - Sun, 21 Apr 2013 12:30:00 GMT\n  let diffTime = eventTime - currentTime;\n  let duration = moment.duration(diffTime*1000, 'milliseconds');\n  let interval = 1000;\n  setInterval(function(){\n  duration = moment.duration(duration - interval, 'milliseconds');\n    $('.countdown').text(duration.hours() + \":\" + duration.minutes() + \":\" + duration.seconds())\n  }, interval);*/\n\n\n}\n\nexport default CountDown;","map":{"version":3,"sources":["/home/niko/Lab/React/waqt-al-falaah/src/components/CountDown.js"],"names":["moment","React","Component","CountDown","constructor","state","fajr","render","console","log"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAChCE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEN,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,OAAT;AADD,KAAb;AAGD;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACA;AAAA,uBAAQC,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,IAAvB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAGD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAtBkC;;AA0BlC,eAAeH,SAAf","sourcesContent":["import moment from \"moment\";\nimport React, { Component } from \"react\";\n\nclass CountDown extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fajr: moment([7, 0], \"HH:mm\"),\n    };\n  }\n\n  render() {\n    return (\n    <div>ok{console.log(this.state.fajr)}</div>\n    )\n  }\n\n  /* let eventTime= 1366549200; // Timestamp - Sun, 21 Apr 2013 13:00:00 GMT\nlet currentTime = 1366547400; // Timestamp - Sun, 21 Apr 2013 12:30:00 GMT\nlet diffTime = eventTime - currentTime;\nlet duration = moment.duration(diffTime*1000, 'milliseconds');\nlet interval = 1000;\n\nsetInterval(function(){\n  duration = moment.duration(duration - interval, 'milliseconds');\n    $('.countdown').text(duration.hours() + \":\" + duration.minutes() + \":\" + duration.seconds())\n}, interval);*/\n}\n\nexport default CountDown;\n"]},"metadata":{},"sourceType":"module"}